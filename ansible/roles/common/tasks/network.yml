---
- name: Install network management utilities
  package:
    name: 'NetworkManager-{{ "glib" if ansible_distribution_major_version == 7 else "libnm" }}'
    state: 'present'
  when: ansible_distribution in ('CentOS')
  register: res
  until: res is success
  retries: '{{ package_retries }}'
  delay: '{{ package_delay }}'
  become: true
  tags:
    - network
- name: Enable NetworkManager
  service:
    name: 'NetworkManager'
    enabled: true
    state: 'started'
  become: true
  when: ansible_distribution in ('CentOS')
  tags:
    - network
- name: Configure networking
  nmcli:
    ageingtime: '{{ item.ageingtime | default(omit) }}'
    arp_interval: '{{ item.arp_interval | default(omit) }}'
    arp_ip_target: '{{ item.arp_ip_target | default(omit) }}'
    autoconnect: '{{ item.autoconnect | default(omit) }}'
    conn_name: '{{ item.conn_name | default(omit) }}'
    dhcp_client_id: '{{ item.dhcp_client_id | default(omit) }}'
    dns4: '{{ item.dns4 | default(omit) }}'
    dns4_search: '{{ item.dns4_search | default(omit) }}'
    dns6: '{{ item.dns6 | default(omit) }}'
    dns6_search: '{{ item.dns6_search | default(omit) }}'
    downdelay: '{{ item.downdelay | default(omit) }}'
    egress: '{{ item.egress | default(omit) }}'
    flags: '{{ item.flags | default(omit) }}'
    forwarddelay: '{{ item.forwarddelay | default(omit) }}'
    gw4: '{{ item.gw4 | default(omit) }}'
    gw6: '{{ item.gw6 | default(omit) }}'
    hairpin: '{{ item.hairpin | default(omit) }}'
    hellotime: '{{ item.hellotime | default(omit) }}'
    ifname: '{{ item.ifname | default(omit) }}'
    ingress: '{{ item.ingress | default(omit) }}'
    ip4: '{{ item.ip4 | default(omit) }}'
    ip6: '{{ item.ip6 | default(omit) }}'
    mac: '{{ item.mac | default(omit) }}'
    master: '{{ item.master | default(omit) }}'
    maxage: '{{ item.maxage | default(omit) }}'
    miimon: '{{ item.miimon | default(omit) }}'
    mode: '{{ item.mode | default(omit) }}'
    mtu: '{{ item.mtu | default(omit) }}'
    path_cost: '{{ item.path_cost | default(omit) }}'
    primary: '{{ item.primary | default(omit) }}'
    priority: '{{ item.priority | default(omit) }}'
    slavepriority: '{{ item.slavepriority | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    stp: '{{ item.stp | default(omit) }}'
    type: '{{ item.type | default(omit) }}'
    updelay: '{{ item.updelay | default(omit) }}'
    vlandev: '{{ item.vlandev | default(omit) }}'
    vlanid: '{{ item.vlanid | default(omit) }}'
  with_items: '{{ network | default([]) }}'
  when: >-
    ansible_distribution in ('CentOS')
    and network is not none
  become: true
  tags:
    - network
