---
- name: Set SELinux state and policy
  selinux:
    conf: '{{ selinux.conf | default(omit) }}'
    policy: '{{ selinux.policy | default(omit) }}'
    state: '{{ selinux.state | default(omit) }}'
  when: >-
    ansible_distribution in ('CentOS')
    and selinux is defined
    and selinux.state is defined
  become: true
  tags:
    - selinux
- name: Install SELinux management utilities
  package:
    name: '{{ item }}'
    state: 'present'
  when: ansible_distribution in ('CentOS')
  register: res
  until: res is success
  retries: '{{ package_retries }}'
  delay: '{{ package_delay }}'
  become: true
  with_items:
    - 'libselinux-{{ "python" if ansible_distribution_major_version == "7" else "python3" }}'
    - 'policycoreutils-{{ "python" if ansible_distribution_major_version == "7" else "python3" }}'
  tags:
    - selinux
- name: Set SELinux ports
  seport:
    ports: '{{ item.ports | default(omit) }}'
    proto: '{{ item.proto | default(omit) }}'
    setype: '{{ item.setype | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
  with_items: '{{ selinux.ports | default([]) }}'
  when: >-
    ansible_distribution in ('CentOS')
    and selinux is defined
    and selinux.ports is not none
  become: true
  tags:
    - selinux
- name: Set SELinux file contexts
  sefcontext:
    ftype: '{{ item.ftype | default(omit) }}'
    reload: '{{ item.reload | default(omit) }}'
    selevel: '{{ item.selevel | default(omit) }}'
    setype: '{{ item.setype | default(omit) }}'
    seuser: '{{ item.seuser | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    target: '{{ item.target | default(omit) }}'
  with_items: '{{ selinux.fcontexts | default([]) }}'
  when: >-
    ansible_distribution in ('CentOS')
    and selinux is defined
    and selinux.fcontexts is not none
  become: true
  tags:
    - selinux
